Namespace(root='/data/office-home/', data='OfficeHome', domain=['Cl'], val_ratio=0.0, train_resizing='ran.crop', val_resizing='default', resize_size=224, scale=[0.08, 1.0], ratio=[0.75, 1.3333333333333333], no_hflip=False, norm_mean=(0.485, 0.456, 0.406), norm_std=(0.229, 0.224, 0.225), arch='resnet50', bottleneck_dim=256, no_pool=False, wn=False, scratch=False, load='./shot_Ar/checkpoints/best.pth', batch_size=64, lr=0.01, lr_gamma=10, lr_decay=0.75, momentum=0.9, weight_decay=0.001, epsilon=1e-05, lb_smooth=0.1, trade_off=0.0, workers=8, epochs=15, print_freq=10, seed=None, per_class_eval=False, log='./shot_Ar_Cl/', phase='train_target')
train_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    RandomCrop(size=(224, 224), padding=None)
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
val_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    CenterCrop(size=(224, 224))
)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
=> using model 'resnet50'
/home/guoxingzhuo/anaconda3/lib/python3.9/site-packages/torchvision/models/_utils.py:252: UserWarning: Accessing the model URLs via the internal dictionary of the module is deprecated since 0.13 and will be removed in 0.15. Please access them via the appropriate Weights Enum instead.
  warnings.warn(
[Parameter containing:
tensor([[-1.3203e-02,  2.1635e-02,  5.5067e-03,  ...,  1.7201e-02,
         -1.2316e-02,  1.0604e-02],
        [ 9.8433e-03,  9.8239e-05,  8.2867e-03,  ..., -1.1610e-02,
         -2.2095e-02, -1.1370e-02],
        [ 1.8196e-02,  1.2645e-02,  1.8936e-02,  ..., -5.5357e-03,
          1.5437e-03,  2.1056e-02],
        ...,
        [ 1.7305e-02,  5.6428e-03,  1.0480e-03,  ..., -9.7294e-03,
          2.3618e-03, -1.3520e-02],
        [-7.8680e-03, -1.5421e-02,  5.3338e-03,  ...,  4.4892e-03,
          1.1225e-03,  1.0687e-02],
        [-1.8341e-02, -1.0100e-03,  1.8089e-02,  ..., -1.7559e-02,
          4.8092e-03,  1.1371e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([-4.4764e-03, -1.5346e-03,  2.0524e-02,  7.8684e-03, -3.2467e-03,
        -1.6837e-02,  9.5761e-03,  2.2947e-03, -1.0292e-02,  1.2980e-02,
         1.7941e-02,  4.7067e-04, -3.2434e-03,  1.3396e-02, -2.0419e-02,
        -1.0878e-02, -3.8657e-03,  5.8910e-03, -7.7355e-03, -5.3563e-03,
        -7.6361e-03, -1.8832e-03, -1.3835e-02, -4.2785e-03, -5.4494e-03,
        -8.3286e-03, -1.9657e-02, -1.1439e-02,  7.6281e-03, -1.3278e-02,
         3.9500e-03, -2.0972e-02, -1.5928e-02, -1.4955e-02, -5.0538e-03,
         1.5656e-02, -8.6010e-03,  1.7965e-02,  3.1323e-03,  7.7289e-03,
         3.1733e-03,  1.4528e-02,  1.0820e-02, -1.2686e-02, -1.5663e-02,
        -1.1134e-02, -8.1257e-03, -1.3570e-03,  2.1157e-02,  5.1277e-03,
        -4.2101e-03, -1.1052e-02, -1.4428e-02,  1.2377e-02,  4.4833e-03,
         5.3582e-03, -7.0377e-04, -6.3423e-03, -1.4684e-02,  5.8527e-03,
         4.1808e-03, -2.0707e-02, -2.0760e-02,  1.0743e-02, -9.9104e-03,
         2.1148e-03, -1.4081e-02,  5.2647e-03, -1.9245e-02,  1.1888e-03,
        -1.0086e-03,  4.7234e-03, -5.4055e-03,  2.0170e-02, -1.5636e-02,
         1.1199e-03,  1.9677e-02,  1.1846e-02,  6.0014e-03,  1.8908e-02,
         1.8183e-02, -1.6959e-03, -6.0549e-04, -6.4194e-03,  1.5421e-02,
         1.6761e-02,  4.0419e-03, -1.3647e-02,  1.6011e-02, -2.1867e-02,
        -1.3578e-02, -1.3668e-02, -1.6744e-02,  1.5205e-02,  2.4356e-04,
        -1.6306e-02,  1.4765e-02, -1.5027e-02,  2.0333e-02, -2.0381e-04,
        -1.8821e-02, -2.1712e-02,  2.2019e-02,  1.7363e-02,  1.0875e-02,
         1.0815e-02,  1.4757e-02, -5.9808e-03, -1.9554e-02,  3.2193e-03,
        -1.1324e-02, -1.3709e-02, -9.8156e-03,  2.0473e-02, -5.0450e-04,
        -2.0604e-02, -4.6612e-03, -1.9023e-02, -1.0375e-02,  1.7368e-02,
        -1.1162e-02,  1.8801e-03,  7.1438e-03, -2.0516e-02, -7.4475e-03,
         8.8093e-03,  9.3927e-03, -1.4547e-02,  1.7482e-02, -7.1608e-03,
         2.1870e-02,  9.0425e-03,  1.4019e-02, -1.3240e-02,  1.0707e-02,
         1.4898e-02, -1.9659e-02, -1.0972e-03,  1.0622e-02, -2.1593e-02,
         1.3519e-02, -1.3939e-02,  1.4478e-02,  1.6522e-02, -1.0388e-03,
         9.5854e-03, -1.3227e-02, -1.6700e-04,  1.9280e-03,  1.7033e-02,
        -4.0611e-03, -8.0513e-03,  9.1118e-03,  2.1836e-02, -1.3508e-02,
         2.3058e-03, -4.9522e-03,  1.1114e-02, -4.8813e-03, -9.5403e-03,
         6.2896e-03,  8.2300e-03, -1.2440e-03, -1.4868e-02, -1.6873e-02,
        -1.9668e-02,  1.4953e-02,  1.3388e-02,  2.1836e-03,  3.7110e-03,
        -1.6321e-03,  7.9909e-03,  1.7815e-03, -2.0517e-02, -7.4988e-04,
         1.6287e-02, -2.1135e-02,  3.6894e-03, -4.9279e-03,  2.9371e-03,
         5.8121e-03, -1.2559e-02,  3.7869e-03, -1.7045e-02, -2.3590e-03,
        -8.7339e-03,  8.1924e-03,  9.7995e-03,  1.2107e-02, -1.7199e-02,
        -5.7318e-03, -1.4996e-02, -1.8894e-02, -1.8941e-02,  1.3147e-02,
         4.7283e-03, -2.6403e-03, -4.0247e-03, -1.9122e-02, -1.8551e-02,
         1.4117e-02, -1.7621e-02,  2.1450e-02,  9.9641e-03,  2.0155e-03,
         4.7091e-03,  1.9492e-03, -1.2198e-02,  1.0498e-02, -3.3555e-03,
        -1.5423e-03,  7.2433e-03,  5.0712e-04,  2.0184e-02, -9.3930e-03,
        -2.2095e-02, -1.7864e-02, -1.2581e-02, -1.2753e-02, -9.5353e-03,
         1.3200e-02, -1.3296e-02, -2.9048e-03, -5.4887e-03, -1.6940e-02,
         1.2412e-03,  1.4365e-02, -8.9587e-03,  1.1395e-02, -1.0998e-02,
         1.6311e-02,  1.9633e-02,  7.5332e-03,  6.8726e-03, -1.3687e-02,
        -1.0719e-02, -1.1572e-02,  1.9574e-02,  2.1183e-02,  1.9941e-02,
         1.8154e-04,  4.6994e-03,  1.7248e-02, -5.9521e-03, -1.6564e-02,
         1.8776e-02,  1.0726e-02,  8.3477e-03, -1.7782e-02, -1.3577e-02,
         2.1902e-02, -1.9504e-02, -8.0714e-05,  1.2311e-02,  1.5762e-02,
         1.5921e-02], device='cuda:0', requires_grad=True), Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1.], device='cuda:0', requires_grad=True), Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)]
2.9755218029022217 0.06008577346801758
Epoch: [0][ 0/69]	Time  2.06 ( 2.06)	Data  0.88 ( 0.88)	Loss   3.04 (  3.04)
2.957932472229004 0.05966806411743164
2.8731632232666016 0.07528829574584961
2.764692544937134 0.09092092514038086
3.058715343475342 0.04875612258911133
2.69442081451416 0.12121152877807617
2.8489155769348145 0.08070707321166992
2.5858314037323 0.1154317855834961
2.64581298828125 0.07911539077758789
3.0233731269836426 0.07085943222045898
2.8882627487182617 0.060808658599853516
Epoch: [0][10/69]	Time  0.24 ( 0.41)	Data  0.10 ( 0.16)	Loss   2.95 (  2.93)
2.7253880500793457 0.09002351760864258
2.819740056991577 0.07952499389648438
2.6991491317749023 0.10663890838623047
2.6066036224365234 0.10655641555786133
2.6558284759521484 0.0845637321472168
2.610628366470337 0.0898427963256836
2.637202501296997 0.10725831985473633
2.632754325866699 0.09189558029174805
2.463339328765869 0.1436614990234375
2.456453800201416 0.12770700454711914
Epoch: [0][20/69]	Time  0.24 ( 0.33)	Data  0.10 ( 0.13)	Loss   2.58 (  2.83)
2.3847594261169434 0.12725591659545898
2.4840002059936523 0.11224794387817383
2.4915292263031006 0.13039350509643555
2.5715227127075195 0.10768365859985352
2.40659761428833 0.1376791000366211
2.6282432079315186 0.10985755920410156
2.350839376449585 0.1720733642578125
2.46484375 0.13970232009887695
2.465597629547119 0.12780237197875977
2.200636863708496 0.1800675392150879
Epoch: [0][30/69]	Time  0.25 ( 0.30)	Data  0.10 ( 0.12)	Loss   2.38 (  2.75)
2.3767874240875244 0.16230535507202148
Traceback (most recent call last):
  File "/workspace/guoxingzhuo/Transfer-Learning-Library/examples/domain_adaptation/source_free_domain_adaptation/shot.py", line 355, in <module>
    main(args)
  File "/workspace/guoxingzhuo/Transfer-Learning-Library/examples/domain_adaptation/source_free_domain_adaptation/shot.py", line 127, in main
    train_target(train_loader, classifier, optimizer, lr_scheduler, epoch, args)
  File "/workspace/guoxingzhuo/Transfer-Learning-Library/examples/domain_adaptation/source_free_domain_adaptation/shot.py", line 266, in train_target
    print(entropy_loss.item(), divergence_loss.item())
KeyboardInterrupt
